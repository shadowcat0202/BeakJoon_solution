/*
문제
어떤 동물원에 가로로 두칸 세로로 N칸인 아래와 같은 우리가 있다.



이 동물원에는 사자들이 살고 있는데 사자들을 우리에 가둘 때, 가로로도 세로로도 붙어 있게 배치할 수는 없다. 이 동물원 조련사는 사자들의 배치 문제 때문에 골머리를 앓고 있다.

동물원 조련사의 머리가 아프지 않도록 우리가 2*N 배열에 사자를 배치하는 경우의 수가 몇 가지인지를 알아내는 프로그램을 작성해 주도록 하자. 사자를 한 마리도 배치하지 않는 경우도 하나의 경우의 수로 친다고 가정한다.

입력
첫째 줄에 우리의 크기 N(1≤N≤100,000)이 주어진다.

출력
첫째 줄에 사자를 배치하는 경우의 수를 9901로 나눈 나머지를 출력하여라.

예제 입력 1
4
예제 출력 1
41
*/

#include <iostream>
#define endl "\n"
#define DIV 9901

int Q1309_dp[3][100001];
int Q1309_solution() {
	int N;
	std::cin >> N;
	Q1309_dp[0][1] = 1;
	Q1309_dp[1][1] = 1;
	Q1309_dp[2][1] = 1;

	for (int i = 2; i <= N; i++) {
		int bf = i - 1;
		Q1309_dp[0][i] = (Q1309_dp[1][bf] + Q1309_dp[2][bf]) % DIV;
		Q1309_dp[1][i] = (Q1309_dp[0][bf] + Q1309_dp[2][bf]) % DIV;
		Q1309_dp[2][i] = (Q1309_dp[0][bf] + Q1309_dp[1][bf] + Q1309_dp[2][bf]) % DIV;
	}
	return (Q1309_dp[0][N]+ Q1309_dp[1][N] + Q1309_dp[2][N]) % DIV;
}

void Q1309() {
	std::cout << Q1309_solution() << endl;
}